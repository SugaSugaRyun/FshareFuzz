        -:    0:Source:/home/s21900059/winter/FshareFuzz/fshare_main.c
        -:    0:Graph:fshare_main.c.gcno
        -:    0:Data:fshare_main.c.gcda
        -:    0:Runs:4
        -:    0:Programs:1
        -:    1:#include "client.h"
        -:    2:
        -:    3:int
function main called 4 returned 100% blocks executed 67%
        4:    4:main(int argc, char * argv[])
        -:    5:{
        4:    6:    get_option(argc, argv) ;
call    0 returned 100%
        -:    7:    
        -:    8:    /* Connect socket */
        -:    9:
        4:   10:    int sock_fd = socket(AF_INET, SOCK_STREAM, 0) ;
call    0 returned 100%
        4:   11:    if (sock_fd <= 0) {
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   12:        perror("socket failed : ") ;
call    0 never executed
    #####:   13:        exit(EXIT_FAILURE) ;
call    0 never executed
        -:   14:    }
        -:   15:
        -:   16:    struct sockaddr_in serv_addr ;
        4:   17:    memset(&serv_addr, '\0', sizeof(serv_addr)) ;
        4:   18:    serv_addr.sin_family = AF_INET ;
        4:   19:    serv_addr.sin_port = htons(port_num) ;
        4:   20:    if (inet_pton(AF_INET, hostip, &serv_addr.sin_addr) <= 0) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   21:        perror("inet_pton failed : ") ;
call    0 never executed
    #####:   22:        exit(EXIT_FAILURE) ;
call    0 never executed
        -:   23:    }
        -:   24:
        4:   25:    if (connect(sock_fd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0) {
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
    #####:   26:        perror("connect failed : ") ;
call    0 never executed
    #####:   27:        exit(EXIT_FAILURE) ;
call    0 never executed
        -:   28:    }
        -:   29:
        -:   30:    
        -:   31:    /* Send the request to the server */
        -:   32:    
        4:   33:    request(sock_fd) ;
call    0 returned 100%
        4:   34:    shutdown(sock_fd, SHUT_WR) ;
call    0 returned 100%
        -:   35:
        -:   36:
        -:   37:    /* Receive response from the server */
        -:   38:
        4:   39:    receive_response(sock_fd) ;
call    0 returned 100%
        -:   40:
        -:   41:    // 이렇게 설정하니 receive_get_response 받기 전에 server 에서 sending 할 때 broken pipe error 뜸
        -:   42:    // if (ch.command == list) 
        -:   43:    //     receive_list_response(sock_fd) ;
        -:   44:    // else if (ch.command == put) 
        -:   45:    //     receive_get_response(sock_fd) ; 
        -:   46:    
        4:   47:    return 0 ;
        -:   48:}
